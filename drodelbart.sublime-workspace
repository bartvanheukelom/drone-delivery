{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Vect",
				"Vector3	threejs.math"
			],
			[
				"rom",
				"rompOffset	var"
			],
			[
				"Obje",
				"Object3D	threejs.core"
			],
			[
				"Mesh",
				"Mesh	threejs.objects"
			],
			[
				"Vec",
				"Vector3	threejs.math"
			],
			[
				"Mes",
				"Mesh	threejs.objects"
			],
			[
				"Box",
				"BoxGeometry	threejs.extras.geometries"
			],
			[
				"Perse",
				"PerspectiveCamera	threejs.cameras"
			],
			[
				"webglr",
				"WebGLRenderer	threejs.renderers"
			],
			[
				"webgl",
				"WebGLRenderer	threejs.renderers"
			],
			[
				"bo",
				"body	nape.phys.Body"
			],
			[
				"draw",
				"drawCircle"
			],
			[
				"Conta",
				"Container	pixi.core.display"
			],
			[
				"Circ",
				"Circle	nape.shape"
			],
			[
				"add",
				"add(...)	nape.geom.Vec2"
			],
			[
				"se",
				"set(...)	nape.geom.Vec2"
			],
			[
				"ma",
				"material	nape.phys.Material"
			],
			[
				"fr",
				"dynamicFriction	Float"
			],
			[
				"e",
				"emit(...)	Bool"
			],
			[
				"worl",
				"getPointWorldVelocity	function"
			],
			[
				"fo",
				"force	var"
			],
			[
				"body",
				"bodyAirForce	var"
			],
			[
				"rompo",
				"rompPos	var"
			],
			[
				"wFin",
				"wFinWind	var"
			],
			[
				"wfin",
				"wFinWind	var"
			],
			[
				"thr",
				"thrustForce	Unknown<4>"
			],
			[
				"r",
				"rotate( angle : Float )	nape.geom.Vec2"
			],
			[
				"wh",
				"wHeadPosRelCenter	var"
			],
			[
				"head",
				"headVel	var"
			],
			[
				"headv",
				"headVelLen	var"
			],
			[
				"headve",
				"headVelLen	var"
			],
			[
				"whe",
				"wHeadPosRelCenter	var"
			],
			[
				"lo",
				"localVectorToWorld(...)	Unknown<17>"
			],
			[
				"l",
				"localVectorToWorld(...)	Unknown<17>"
			],
			[
				"local",
				"localCOM	nape.geom.Vec2"
			],
			[
				"loc",
				"localCOM	nape.geom.Vec2"
			],
			[
				"par",
				"parseInt( x : String )	Null<Int>"
			],
			[
				"ho",
				"hoverDrone	var"
			],
			[
				"a",
				"averageEase(...)	Float"
			],
			[
				"Graphcis",
				"Graphics	pixi.core.graphics"
			],
			[
				"Keyboar",
				"KeyboardInput	weber.game.input"
			],
			[
				"tra",
				"translate(...)	Unknown<11>"
			],
			[
				"wo",
				"worldPointToLocal(...)	Unknown<34>"
			],
			[
				"th",
				"thrust	var"
			],
			[
				"m",
				"mul(...)	nape.geom.Vec2"
			],
			[
				"drone",
				"droneBody	var"
			],
			[
				"G",
				"Gamepad"
			],
			[
				"Grap",
				"Graphics	pixi.core.graphics"
			],
			[
				"res",
				"resize(...)	Void"
			],
			[
				"Sc",
				"Scene	threejs.scenes"
			],
			[
				"Camera",
				"PerspectiveCamera	threejs.cameras"
			],
			[
				"Webglren",
				"WebGLRenderer	threejs.renderers"
			],
			[
				"WebGl",
				"WebGLRenderer	threejs.renderers"
			],
			[
				"get",
				"getPixel( x : Int , y : Int )	UInt"
			],
			[
				"sub",
				"subpol"
			],
			[
				"st",
				"STATIC	nape.phys.BodyType"
			],
			[
				"GeomPoly",
				"GeomPolyList	nape.geom"
			],
			[
				"getpi",
				"getPixel32( x : Int , y : Int )	UInt"
			],
			[
				"ev",
				"Event	flash.events"
			],
			[
				"added",
				"ADDED_TO_STAGE	String"
			],
			[
				"Dyn",
				"DYNAMIC"
			],
			[
				"shape",
				"Shape	flash.display"
			],
			[
				"poly",
				"Polygon	nape.shape"
			],
			[
				"bod",
				"Body	nape.phys"
			],
			[
				"trace",
				"Trace	flash.trace"
			],
			[
				"en",
				"ENTER_FRAME	String"
			],
			[
				"li",
				"Lib	class"
			]
		]
	},
	"buffers":
	[
		{
			"file": "src/droneon/Main.hx",
			"settings":
			{
				"buffer_size": 10437,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/droneon/model/Entity.hx",
			"settings":
			{
				"buffer_size": 85,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/droneon/DroneView.hx",
			"settings":
			{
				"buffer_size": 5437,
				"line_ending": "Unix"
			}
		},
		{
			"file": "res/always/src/1lib/three.js",
			"settings":
			{
				"buffer_size": 796192,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/droneon/model/Drone.hx",
			"settings":
			{
				"buffer_size": 4365,
				"line_ending": "Unix"
			}
		},
		{
			"file": "build.hxml",
			"settings":
			{
				"buffer_size": 553,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "TheBuild",
	"build_system_choices":
	[
		[
			[
				[
					"TheBuild",
					""
				],
				[
					"Packages/Haxe/Support/Hxml.sublime-build",
					""
				]
			],
			[
				"TheBuild",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 49.0,
		"last_filter": "packag",
		"selected_items":
		[
			[
				"packag",
				"Preferences: Browse Packages"
			],
			[
				"haxeli",
				"Haxelib: Install library"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"removep",
				"Package Control: Remove Package"
			],
			[
				"remove",
				"Haxelib: Remove library"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"pac",
				"Package Control: Remove Package"
			],
			[
				"package",
				"Package Control: Install Package"
			],
			[
				"packe",
				"Package Control: Install Package"
			]
		],
		"width": 382.0
	},
	"console":
	{
		"height": 391.0,
		"history":
		[
			"quit;",
			"quot",
			"exit",
			"bash",
			"`git`",
			"git",
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"import urllib.request,os; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), 'wb').write(urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ','%20')).read())"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/bart/projects/drone-delivery",
		"/home/bart/projects/drone-delivery/res",
		"/home/bart/projects/drone-delivery/res/always",
		"/home/bart/projects/drone-delivery/res/always/src",
		"/home/bart/projects/drone-delivery/res/always/src/1lib",
		"/home/bart/projects/drone-delivery/src",
		"/home/bart/projects/drone-delivery/src/droneon",
		"/home/bart/projects/drone-delivery/src/droneon/model"
	],
	"file_history":
	[
		"/home/bart/Dropbox/projects/drone-delivery/padtest/index.html",
		"/home/bart/projects/drone-delivery/build.sh",
		"/home/bart/projects/drone-delivery/drodelbart.sublime-project",
		"/home/bart/projects/drone-delivery/src/dronedelivery/Main.hx",
		"/home/bart/projects/drone-delivery/src/droneon/DroneView.hx",
		"/home/bart/projects/drone-delivery/src/dronedelivery/model/Entity.hx",
		"/home/bart/projects/drone-delivery/src/dronedelivery/model/Drone.hx",
		"/home/bart/Dropbox/projects/drone-delivery/padtest/package.json",
		"/home/bart/projects/drone-delivery/build.hxml",
		"/home/bart/projects/drone-delivery/res/always/src/1lib/pixi.js",
		"/home/bart/projects/altinstar-code/trunk/htmlclient/desktop/src/index.js",
		"/home/bart/projects/altinstar-code/trunk/htmlclient/desktop/src/index.html",
		"/home/bart/weber/share/tortilla/trunk/tortilla.js",
		"/home/bart/Dropbox/projects/tankvolution/code/src/tankvolution/Main.hx",
		"/home/bart/weber/share/haxe-common/trunk/tortilla/Tortilla.hx",
		"/home/bart/Dropbox/projects/tankvolution/code/build/browser/script/tortilla/browsertortilla_0a0044e66ac49df356f4.js",
		"/home/bart/weber/share/haxe-common/trunk/weber/game/assets/ThreeObjectAsset.hx",
		"/home/bart/Dropbox/projects/tankvolution/code/tankvolution.sublime-project",
		"/home/bart/Dropbox/projects/haxe/TerrainFun/Source/TerrainIsoFunction.hx",
		"/home/bart/Dropbox/projects/haxe/TerrainFun/flash.sublime-build",
		"/home/bart/Dropbox/projects/haxe/TerrainFun/project.xml",
		"/home/bart/Dropbox/projects/haxe/TerrainFun/npm-debug.log",
		"/home/bart/Dropbox/projects/haxe/TerrainFun/apache-ant-1.9.2-bin.tar.gz",
		"/home/bart/Dropbox/projects/haxe/TerrainFun/android-sdk_r22.0.5-linux.tgz",
		"/home/bart/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
		"/home/bart/Dropbox/projects/haxetest/haxetest.sublime-project",
		"/home/bart/Dropbox/projects/haxetest/src/Test.hx",
		"/home/bart/Dropbox/projects/haxetest/build.hxml",
		"/home/bart/Dropbox/projects/haxetest/src/compile.hxml",
		"/home/bart/Dropbox/projects/haxetest/src/compile.hxml~",
		"/home/bart/Dropbox/projects/haxetest/src/Test.hx~"
	],
	"find":
	{
		"height": 33.0
	},
	"find_in_files":
	{
		"height": 87.0,
		"where_history":
		[
			"/home/bart/revora/revoradev/t3a/trunk/src"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"20",
			"		\n",
			"uniform",
			"\");\n",
			"ItemTeam",
			"						",
			"AABB",
			"shape",
			"Lib",
			"		",
			";\n",
			"\n        ",
			";\n"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/droneon/Main.hx",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10437,
						"regions":
						{
						},
						"selection":
						[
							[
								8862,
								8862
							]
						],
						"settings":
						{
							"haxe-build-id": 0,
							"syntax": "Packages/Haxe/Haxe.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4742.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/droneon/model/Entity.hx",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 85,
						"regions":
						{
						},
						"selection":
						[
							[
								16,
								16
							]
						],
						"settings":
						{
							"haxe-build-id": 0,
							"syntax": "Packages/Haxe/Haxe.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "src/droneon/DroneView.hx",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5437,
						"regions":
						{
						},
						"selection":
						[
							[
								3673,
								3673
							]
						],
						"settings":
						{
							"haxe-build-id": 0,
							"syntax": "Packages/Haxe/Haxe.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1305.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "res/always/src/1lib/three.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 796192,
						"regions":
						{
						},
						"selection":
						[
							[
								796192,
								796192
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 520189.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "src/droneon/model/Drone.hx",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4365,
						"regions":
						{
						},
						"selection":
						[
							[
								1013,
								1013
							]
						],
						"settings":
						{
							"haxe-build-id": 0,
							"syntax": "Packages/Haxe/Haxe.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 495.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "build.hxml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 553,
						"regions":
						{
						},
						"selection":
						[
							[
								199,
								199
							]
						],
						"settings":
						{
							"haxe-build-id": 0,
							"syntax": "Packages/Haxe/Hxml.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 242.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "drodelbart.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"index.",
				"src/index.js"
			],
			[
				"inde",
				"src/index.html"
			],
			[
				"torti",
				"trunk/tortilla/Tortilla.hx"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 226.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
